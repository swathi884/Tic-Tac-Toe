
import java.util.Scanner;
import java.util.Random;
import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;
public class TicTacToe{
   static ArrayList<Integer> playerPositions = new ArrayList<Integer>();
   static ArrayList<Integer> cpuPositions = new ArrayList<Integer>();
   public static void main(String args[]){
    
  
     char [] [] gameboard = { {' ','|',' ','|',' '},
              
             
                { '-','+','-','+','-'},
                
            
                { ' ','|',' ','|',' '},
               
              
                { '-','+','-','+','-'},
              
              
                { ' ','|',' ','|',' '}};
    
   
     printGameBoard(gameboard);
     
     
  
     
     while(true){
       Scanner scan =new Scanner(System.in);
     System.out.println("enter your placement (1-9):");
    
     int playerpos = scan.nextInt();
     while(playerPositions.contains(playerpos) || cpuPositions.contains(playerPositions)){
       System.out.println("position taken! enter a correct position");
       playerpos = scan.nextInt();
     }
   
     placepiece(gameboard,playerpos,"player");
     String result = checkwinner();
      if(result.length() > 0){
       System.out.println(result);
       break;
     }
     Random rand = new Random();
   
     int cpupos = rand.nextInt(9) +1;
     while(playerPositions.contains(cpupos) || cpuPositions.contains(cpupos)){
       
       cpupos = rand.nextInt(9) +1;
     }
     placepiece(gameboard,cpupos,"cpu");
     
    
     printGameBoard(gameboard);
     result = checkwinner();
     if(result.length() > 0){
       System.out.println(result);
       break;
     }
     
     }
  
     
 
   }
  

   public static void printGameBoard(char [] [] gameboard){
     
   
     for(char[] row : gameboard){
      
    
       for(char c : row){
        
       
         System.out.print(c);
      
    
       }
       
     
       System.out.println();
     
    
     }
  
 
   }

   public static void placepiece(char [] [] gameboard, int pos, String user){
     
    
     char symbol = ' ';
    
     if(user.equals("player")){
       
       symbol = 'x';
       playerPositions.add(pos);
     } else if(user.equals("cpu")){
       
       symbol = '0';
       cpuPositions.add(pos);
     }
   
     switch(pos){
     
       case 1:
       
         gameboard [0] [0] = symbol;
       
         break;
       
      
       case 2:
      
         gameboard [0] [2] = symbol;
         
         break;
       
    
       case 3:
       
         gameboard [0] [4] = symbol;
       
         break;
     
       case 4:
       
         gameboard [2] [0] = symbol;
       
         break;
     
       case 5:
        
         gameboard [2] [2] = symbol;
      
         break;
     
       case 6:
        
         gameboard [2] [4] = symbol;
        
         break;
    
       case 7:
        
         gameboard [4] [0] = symbol;
      
         break;
      
       case 8:
        
         gameboard [4] [2] = symbol;
       
         break;
     
       case 9:
        
         gameboard [4] [4] = symbol;
       
         break;
      
       default:
        
         break;
    
     }
  
   }
   public static String checkwinner(){
     List topRow = Arrays.asList(1,2,3);
     List midRow = Arrays.asList(4,5,6);
     List botRow = Arrays.asList(7,8,9);
     List leftcol= Arrays.asList(1,4,7);
     List midcol = Arrays.asList(2,5,8);
     List rightcol = Arrays.asList(3,6,9);
     List cross1 = Arrays.asList(1,5,9);
     List cross2 = Arrays.asList(7,5,3);
     
     List<List> winning = new ArrayList<List>();
     winning.add(topRow);
     winning.add(midRow);
     winning.add(botRow);
     winning.add(leftcol);
     winning.add(midcol);
     winning.add(rightcol);
     winning.add(cross1);
     winning.add(cross2);
     for(List l: winning){
       if(playerPositions.containsAll(l)){
         return "congratulations you won!";
       } else if(cpuPositions.contains(l)){
         return "cpu wins! sorry:(";
       } else if(playerPositions.size() + cpuPositions.size()==9){
         return "cat!";
       }
     }
     
     return "";
   }
 }
                  
                
                  
                
                  
                
                  
                
       
     
       
     
   

